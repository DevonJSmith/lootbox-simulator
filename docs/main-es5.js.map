{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///assets/animations.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/landing-seed-generator/landing-seed-generator.component.ts","webpack:///src/app/landing-seed-generator/landing-seed-generator.component.html","webpack:///src/app/lootbox-home/lootbox-home.component.ts","webpack:///src/app/lootbox-home/lootbox-home.component.html","webpack:///src/app/lootbox-home/lootbox-item/lootbox-item.component.ts","webpack:///src/app/lootbox-home/lootbox-item/lootbox-item.component.html","webpack:///src/app/services/lootbox-item.service.ts","webpack:///src/app/services/random-image.service.ts","webpack:///src/app/services/random-text.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","FadeInAnimation","opacity","FadeOutAnimation","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LandingSeedGeneratorComponent","router","seed","password","navigate","LootboxHomeComponent","lootBoxService","route","platformLocation","snackbar","itemNumber","lootBoxItems","seedParameter","paramMap","subscribe","params","get","GenerateLootBoxItems","i","generateLootboxItem","x","push","item","flipped","open","duration","every","animations","LootboxItemComponent","itemFlipped","emit","LootboxItemService","randomTextService","randomImageService","numberSeed","generateSeed","subscriber","next","name","getRandomName","description","getRandomDescription","imgUrl","getRandomImgUrl","seedString","asciiString","length","charCodeAt","toString","Number","parseInt","providedIn","RandomImageService","httpClient","picSumBaseUrl","pictureWidth","pictureHeight","RandomTextService","productName","phrase","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { animation, trigger, transition, style, animate } from '@angular/animations';\r\n\r\nexport const FadeInAnimation = animation([\r\n    style({opacity: 0}),\r\n    animate('{{ duration }}', style({opacity: 1}))\r\n]);\r\n\r\nexport const FadeOutAnimation = animation([\r\n    animate('{{ duration }}', style({opacity: 0}))\r\n]);\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LootboxHomeComponent } from './lootbox-home/lootbox-home.component';\nimport { LandingSeedGeneratorComponent } from './landing-seed-generator/landing-seed-generator.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingSeedGeneratorComponent\n  },\n  {\n    path: 'lootbox/:seed',\n    component: LootboxHomeComponent\n  },\n  {\n    path: 'lootbox',\n    component: LootboxHomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lootbox-simulator';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LootboxHomeComponent } from './lootbox-home/lootbox-home.component';\nimport { LootboxItemComponent } from './lootbox-home/lootbox-item/lootbox-item.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'; \nimport { ClipboardModule } from 'ngx-clipboard';\nimport { LandingSeedGeneratorComponent } from './landing-seed-generator/landing-seed-generator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LootboxHomeComponent,\n    LootboxItemComponent,\n    LandingSeedGeneratorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    MatSnackBarModule,\n    ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as faker from 'faker';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing-seed-generator',\n  templateUrl: './landing-seed-generator.component.html',\n  styleUrls: ['./landing-seed-generator.component.css']\n})\nexport class LandingSeedGeneratorComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    // use faker library to generate a seed\n    const seed = faker.internet.password(8);\n    // route to the lootbox home using the seed\n    this.router.navigate([`/lootbox/${seed}`]);\n  }\n\n}\n","<div class=\"spinnerContainer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-spinner></mat-spinner>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { LootboxItemService } from '../services/lootbox-item.service';\nimport { LootBoxItemModel } from '../models/lootbox-item-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { FadeInAnimation, FadeOutAnimation } from 'assets/animations';\nimport { PlatformLocation } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-lootbox-home',\n  templateUrl: './lootbox-home.component.html',\n  styleUrls: ['./lootbox-home.component.css'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(FadeInAnimation, {\n          params: {\n            duration: '900ms'\n          }\n        })\n      ]),\n      transition(':leave', [\n        useAnimation(FadeOutAnimation, {\n          params: {\n            duration: '900ms'\n          }\n        })\n      ])\n    ])\n  ]\n})\nexport class LootboxHomeComponent implements OnInit {\n\n  @Input() itemNumber = 1;\n  private seed = 'Default';\n  // list of loot box items\n  public lootBoxItems: Array<LootBoxItemModel> = [];\n\n  public get AllItemsFlipped() {\n    return this.lootBoxItems.every(x => x.flipped);\n  }\n\n  constructor(private lootBoxService: LootboxItemService, public route: ActivatedRoute, public platformLocation: PlatformLocation, private snackbar: MatSnackBar) { }\n\n  ngOnInit() {\n    // get the seed from the URL, if possible\n    const seedParameter = this.route.paramMap.subscribe(params => {\n      if (params.get('seed')) {\n        this.seed = params.get('seed');\n      }\n\n      this.GenerateLootBoxItems();\n    });\n  }\n\n  GenerateLootBoxItems() {\n    this.lootBoxItems = [];\n    for (let i = 0; i < this.itemNumber; i ++) {\n      this.lootBoxService.generateLootboxItem(this.seed).subscribe(x => {\n        this.lootBoxItems.push(x);\n      });\n    }\n  }\n\n  LootBoxItemFlipped(item: LootBoxItemModel) {\n    item.flipped = true;\n  }\n\n  LinkCopied() {\n    this.snackbar.open('Link Copied!', null, {\n      duration: 1300\n    });\n  }\n\n\n\n}\n","<div class=\"lootboxContainer\" [style.height.%]=\"100\">\n    <div fxLayout=\"column\" [style.height.%]=\"100\">\n        <div [style.height.px]=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div *ngIf=\"AllItemsFlipped\" class=\"statusText\" [@fadeInOut]>\n                <div >\n                    Congratulations, you got...\n                </div>\n            </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center start\" fxFlex=\"1 0 auto\">\n            <div *ngFor='let item of lootBoxItems'>\n                <app-lootbox-item [lootboxItem]='item' (itemFlipped)=\"LootBoxItemFlipped(item)\" ></app-lootbox-item>\n            </div>\n        </div>\n        <div fxFlex=\"none\" fxLayout=\"column\" fxLayoutAlign=\"start center\"  *ngIf=\"AllItemsFlipped\" [@fadeInOut]>\n            <!-- New Loot Box -->\n            <a mat-raised-button [routerLink]=\"['/']\">Generate New Lootbox</a>\n            <!-- Share Buttons -->\n            <div class=\"urlCopyContainer\">\n                <mat-form-field>\n                    <mat-label>\n                        Shareable Link\n                    </mat-label>\n                    <input matInput type='text' [value]='platformLocation.href' disabled />\n                </mat-form-field>\n                <button mat-raised-button ngxClipboard [cbContent]='platformLocation.href' (cbOnSuccess)='LinkCopied()'>Copy</button>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { LootBoxItemModel } from 'src/app/models/lootbox-item-model';\nimport { EventEmitter } from '@angular/core';\nimport { transition, animate, style, trigger, useAnimation } from '@angular/animations';\nimport { FadeInAnimation, FadeOutAnimation } from 'assets/animations';\n\n@Component({\n  selector: 'app-lootbox-item',\n  templateUrl: './lootbox-item.component.html',\n  styleUrls: ['./lootbox-item.component.css'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(FadeInAnimation, {\n          params: {\n            duration: '1300ms'\n          }\n        })\n      ]),\n      transition(':leave', [\n        useAnimation(FadeOutAnimation, {\n          params: {\n            duration: '1300ms'\n          }\n        })\n      ])\n    ])\n  ]\n})\nexport class LootboxItemComponent implements OnInit {\n\n  @Input() lootboxItem: LootBoxItemModel;\n  @Output() itemFlipped = new EventEmitter<any>();\n  public flipped = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  revealItem() {\n    this.flipped = true;\n    this.itemFlipped.emit(this.flipped);\n  }\n\n}\n","<div *ngIf=\"!flipped\" [@fadeInOut]> \n    <mat-card class=\"lootboxCard\">\n        <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"fullSize\">\n            <button mat-raised-button color=\"primary\" (click)=\"revealItem()\">Reveal</button>\n        </mat-card-content>\n    </mat-card>\n</div>\n<div *ngIf=\"flipped\" [@fadeInOut]>\n    <mat-card class=\"lootboxCard\">\n        <mat-card-header>\n            <mat-card-title>{{lootboxItem.name}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{lootboxItem.imgUrl}}\" />\n        <mat-card-content>\n            <p>{{lootboxItem.description}}</p>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { LootBoxItemModel } from '../models/lootbox-item-model';\nimport { RandomTextService } from './random-text.service';\nimport { RandomImageService } from './random-image.service';\nimport * as faker from 'faker';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LootboxItemService {\n\n  constructor(private randomTextService: RandomTextService, private randomImageService: RandomImageService) { }\n\n  public generateLootboxItem(seed: string | null): Observable<LootBoxItemModel> {\n    const numberSeed = this.generateSeed(seed);\n\n    return new Observable(subscriber => {\n      subscriber.next({\n        name: this.randomTextService.getRandomName(numberSeed),\n        description: this.randomTextService.getRandomDescription(numberSeed),\n        imgUrl: this.randomImageService.getRandomImgUrl(numberSeed),\n        flipped: false\n      });\n    });\n    // return {\n    //   name: this.randomTextService.getRandomName(numberSeed),\n    //   description: this.randomTextService.getRandomDescription(numberSeed),\n    //   imgUrl: this.randomImageService.getRandomImgUrl(numberSeed)\n    // } as LootBoxItemModel;\n  }\n\n  private generateSeed(seed: string | null): number {\n    let seedString = seed;\n    if (!seedString) {\n      seedString = faker.internet.password(8);\n    }\n\n    // convert password to ascii code\n    let asciiString = '';\n    for (let i = 0; i < seedString.length; i ++) {\n      asciiString += seedString.charCodeAt(i).toString(10);\n    }\n\n    return Number.parseInt(asciiString, 10);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomImageService {\n  // Picsum request variables\n  private picSumBaseUrl = 'https://picsum.photos';\n  private pictureWidth = 600;\n  private pictureHeight = 600;\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getRandomImgUrl(seed: number): string {\n    return this.picSumBaseUrl + '/seed/' + seed + '/' + this.pictureWidth + '/' + this.pictureHeight;\n    // return loremPicsum({\n    //   width: 300,\n    //   image: seed\n    // });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomTextService {\n\n  constructor() { }\n\n  public getRandomName(seed: number): string {\n    faker.seed(seed);\n    return faker.commerce.productName();\n  }\n\n  public getRandomDescription(seed: number): string {\n    faker.seed(seed);\n    return faker.hacker.phrase();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}