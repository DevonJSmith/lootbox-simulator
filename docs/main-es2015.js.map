{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./assets/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/landing-seed-generator/landing-seed-generator.component.ts","./src/app/landing-seed-generator/landing-seed-generator.component.html","./src/app/lootbox-home/lootbox-home.component.ts","./src/app/lootbox-home/lootbox-home.component.html","./src/app/lootbox-home/lootbox-item/lootbox-item.component.ts","./src/app/lootbox-home/lootbox-item/lootbox-item.component.html","./src/app/services/lootbox-item.service.ts","./src/app/services/random-image.service.ts","./src/app/services/random-text.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { animation, trigger, transition, style, animate } from '@angular/animations';\r\n\r\nexport const FadeInAnimation = animation([\r\n    style({opacity: 0}),\r\n    animate('{{ duration }}', style({opacity: 1}))\r\n]);\r\n\r\nexport const FadeOutAnimation = animation([\r\n    animate('{{ duration }}', style({opacity: 0}))\r\n]);\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LootboxHomeComponent } from './lootbox-home/lootbox-home.component';\nimport { LandingSeedGeneratorComponent } from './landing-seed-generator/landing-seed-generator.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingSeedGeneratorComponent\n  },\n  {\n    path: 'lootbox/:seed',\n    component: LootboxHomeComponent\n  },\n  {\n    path: 'lootbox',\n    component: LootboxHomeComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'lootbox-simulator';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LootboxHomeComponent } from './lootbox-home/lootbox-home.component';\nimport { LootboxItemComponent } from './lootbox-home/lootbox-item/lootbox-item.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar'; \nimport { ClipboardModule } from 'ngx-clipboard';\nimport { LandingSeedGeneratorComponent } from './landing-seed-generator/landing-seed-generator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LootboxHomeComponent,\n    LootboxItemComponent,\n    LandingSeedGeneratorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatInputModule,\n    MatCardModule,\n    MatSnackBarModule,\n    ClipboardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport * as faker from 'faker';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing-seed-generator',\n  templateUrl: './landing-seed-generator.component.html',\n  styleUrls: ['./landing-seed-generator.component.css']\n})\nexport class LandingSeedGeneratorComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    // use faker library to generate a seed\n    const seed = faker.internet.password(8);\n    // route to the lootbox home using the seed\n    this.router.navigate([`/lootbox/${seed}`]);\n  }\n\n}\n","<div class=\"spinnerContainer\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <mat-spinner></mat-spinner>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { LootboxItemService } from '../services/lootbox-item.service';\nimport { LootBoxItemModel } from '../models/lootbox-item-model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { trigger, transition, useAnimation } from '@angular/animations';\nimport { FadeInAnimation, FadeOutAnimation } from 'assets/animations';\nimport { PlatformLocation } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-lootbox-home',\n  templateUrl: './lootbox-home.component.html',\n  styleUrls: ['./lootbox-home.component.css'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(FadeInAnimation, {\n          params: {\n            duration: '900ms'\n          }\n        })\n      ]),\n      transition(':leave', [\n        useAnimation(FadeOutAnimation, {\n          params: {\n            duration: '900ms'\n          }\n        })\n      ])\n    ])\n  ]\n})\nexport class LootboxHomeComponent implements OnInit {\n\n  @Input() itemNumber = 1;\n  private seed = 'Default';\n  // list of loot box items\n  public lootBoxItems: Array<LootBoxItemModel> = [];\n\n  public get AllItemsFlipped() {\n    return this.lootBoxItems.every(x => x.flipped);\n  }\n\n  constructor(private lootBoxService: LootboxItemService, public route: ActivatedRoute, public platformLocation: PlatformLocation, private snackbar: MatSnackBar) { }\n\n  ngOnInit() {\n    // get the seed from the URL, if possible\n    const seedParameter = this.route.paramMap.subscribe(params => {\n      if (params.get('seed')) {\n        this.seed = params.get('seed');\n      }\n\n      this.GenerateLootBoxItems();\n    });\n  }\n\n  GenerateLootBoxItems() {\n    this.lootBoxItems = [];\n    for (let i = 0; i < this.itemNumber; i ++) {\n      this.lootBoxService.generateLootboxItem(this.seed).subscribe(x => {\n        this.lootBoxItems.push(x);\n      });\n    }\n  }\n\n  LootBoxItemFlipped(item: LootBoxItemModel) {\n    item.flipped = true;\n  }\n\n  LinkCopied() {\n    this.snackbar.open('Link Copied!', null, {\n      duration: 1300\n    });\n  }\n\n\n\n}\n","<div class=\"lootboxContainer\" [style.height.%]=\"100\">\n    <div fxLayout=\"column\" [style.height.%]=\"100\">\n        <div [style.height.px]=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n            <div *ngIf=\"AllItemsFlipped\" class=\"statusText\" [@fadeInOut]>\n                <div >\n                    Congratulations, you got...\n                </div>\n            </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutAlign=\"center start\" fxFlex=\"1 0 auto\">\n            <div *ngFor='let item of lootBoxItems'>\n                <app-lootbox-item [lootboxItem]='item' (itemFlipped)=\"LootBoxItemFlipped(item)\" ></app-lootbox-item>\n            </div>\n        </div>\n        <div fxFlex=\"none\" fxLayout=\"column\" fxLayoutAlign=\"start center\"  *ngIf=\"AllItemsFlipped\" [@fadeInOut]>\n            <!-- New Loot Box -->\n            <a mat-raised-button [routerLink]=\"['/']\">Generate New Lootbox</a>\n            <!-- Share Buttons -->\n            <div class=\"urlCopyContainer\">\n                <mat-form-field>\n                    <mat-label>\n                        Shareable Link\n                    </mat-label>\n                    <input matInput type='text' [value]='platformLocation.href' disabled />\n                </mat-form-field>\n                <button mat-raised-button ngxClipboard [cbContent]='platformLocation.href' (cbOnSuccess)='LinkCopied()'>Copy</button>\n\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output } from '@angular/core';\nimport { LootBoxItemModel } from 'src/app/models/lootbox-item-model';\nimport { EventEmitter } from '@angular/core';\nimport { transition, animate, style, trigger, useAnimation } from '@angular/animations';\nimport { FadeInAnimation, FadeOutAnimation } from 'assets/animations';\n\n@Component({\n  selector: 'app-lootbox-item',\n  templateUrl: './lootbox-item.component.html',\n  styleUrls: ['./lootbox-item.component.css'],\n  animations: [\n    trigger('fadeInOut', [\n      transition(':enter', [\n        useAnimation(FadeInAnimation, {\n          params: {\n            duration: '1300ms'\n          }\n        })\n      ]),\n      transition(':leave', [\n        useAnimation(FadeOutAnimation, {\n          params: {\n            duration: '1300ms'\n          }\n        })\n      ])\n    ])\n  ]\n})\nexport class LootboxItemComponent implements OnInit {\n\n  @Input() lootboxItem: LootBoxItemModel;\n  @Output() itemFlipped = new EventEmitter<any>();\n  public flipped = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n  revealItem() {\n    this.flipped = true;\n    this.itemFlipped.emit(this.flipped);\n  }\n\n}\n","<div *ngIf=\"!flipped\" [@fadeInOut]> \n    <mat-card class=\"lootboxCard\">\n        <mat-card-content fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"fullSize\">\n            <button mat-raised-button color=\"primary\" (click)=\"revealItem()\">Reveal</button>\n        </mat-card-content>\n    </mat-card>\n</div>\n<div *ngIf=\"flipped\" [@fadeInOut]>\n    <mat-card class=\"lootboxCard\">\n        <mat-card-header>\n            <mat-card-title>{{lootboxItem.name}}</mat-card-title>\n        </mat-card-header>\n        <img mat-card-image src=\"{{lootboxItem.imgUrl}}\" />\n        <mat-card-content>\n            <p>{{lootboxItem.description}}</p>\n        </mat-card-content>\n    </mat-card>\n</div>\n","import { Injectable } from '@angular/core';\nimport { LootBoxItemModel } from '../models/lootbox-item-model';\nimport { RandomTextService } from './random-text.service';\nimport { RandomImageService } from './random-image.service';\nimport * as faker from 'faker';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LootboxItemService {\n\n  constructor(private randomTextService: RandomTextService, private randomImageService: RandomImageService) { }\n\n  public generateLootboxItem(seed: string | null): Observable<LootBoxItemModel> {\n    const numberSeed = this.generateSeed(seed);\n\n    return new Observable(subscriber => {\n      subscriber.next({\n        name: this.randomTextService.getRandomName(numberSeed),\n        description: this.randomTextService.getRandomDescription(numberSeed),\n        imgUrl: this.randomImageService.getRandomImgUrl(numberSeed),\n        flipped: false\n      });\n    });\n    // return {\n    //   name: this.randomTextService.getRandomName(numberSeed),\n    //   description: this.randomTextService.getRandomDescription(numberSeed),\n    //   imgUrl: this.randomImageService.getRandomImgUrl(numberSeed)\n    // } as LootBoxItemModel;\n  }\n\n  private generateSeed(seed: string | null): number {\n    let seedString = seed;\n    if (!seedString) {\n      seedString = faker.internet.password(8);\n    }\n\n    // convert password to ascii code\n    let asciiString = '';\n    for (let i = 0; i < seedString.length; i ++) {\n      asciiString += seedString.charCodeAt(i).toString(10);\n    }\n\n    return Number.parseInt(asciiString, 10);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomImageService {\n  // Picsum request variables\n  private picSumBaseUrl = 'https://picsum.photos';\n  private pictureWidth = 600;\n  private pictureHeight = 600;\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getRandomImgUrl(seed: number): string {\n    return this.picSumBaseUrl + '/seed/' + seed + '/' + this.pictureWidth + '/' + this.pictureHeight;\n    // return loremPicsum({\n    //   width: 300,\n    //   image: seed\n    // });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as faker from 'faker';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RandomTextService {\n\n  constructor() { }\n\n  public getRandomName(seed: number): string {\n    faker.seed(seed);\n    return faker.commerce.productName();\n  }\n\n  public getRandomDescription(seed: number): string {\n    faker.seed(seed);\n    return faker.hacker.phrase();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}